"use strict";(self.webpackChunksimpo_home=self.webpackChunksimpo_home||[]).push([[2730],{2761:(n,e,l)=>{l.r(e),l.d(e,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var i=l(4848),r=l(8453);const s={sidebar_position:21},t="2022",o={id:"SIMPO Pro/Earlier/2022",title:"2022",description:"2022-05-11",source:"@site/changelog/SIMPO Pro/Earlier/2022.md",sourceDirName:"SIMPO Pro/Earlier",slug:"/SIMPO Pro/Earlier/2022",permalink:"/changelog/SIMPO Pro/Earlier/2022",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:21,frontMatter:{sidebar_position:21},sidebar:"docs",previous:{title:"2023",permalink:"/changelog/SIMPO Pro/Earlier/2023"},next:{title:"2025",permalink:"/changelog/SIMPO Client/2025"}},a={},d=[{value:"2022-05-11",id:"2022-05-11",level:2},{value:"2022-04-13",id:"2022-04-13",level:2},{value:"2022-03-24",id:"2022-03-24",level:2},{value:"2022-03-22",id:"2022-03-22",level:2},{value:"2022-02-20",id:"2022-02-20",level:2},{value:"2022-02-19",id:"2022-02-19",level:2}];function c(n){const e={h1:"h1",h2:"h2",header:"header",li:"li",ul:"ul",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"2022",children:"2022"})}),"\n",(0,i.jsx)(e.h2,{id:"2022-05-11",children:"2022-05-11"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Changed","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Match with web version improve."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"2022-04-13",children:"2022-04-13"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Fixed","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Fixed lots of bugs and Test lots of situation, seems ok"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["Changed","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:'Fortran input parameters should not get initial value in declaration. If you set a initial value to a parameter in declaration, it will get "save" effect, everytime OpenMP call Get_Kernel_Evaluation(), this parameter will be accumulated.'}),"\n",(0,i.jsx)(e.li,{children:"Component in Get_Kernel_Evaluation() has been set to intent(in)."}),"\n",(0,i.jsx)(e.li,{children:"BioComponent_rollback also gets detection_limit to prevent Grid_dt_second become 0 under Forward_Euler condiction."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"2022-03-24",children:"2022-03-24"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Changed","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Inflow and flow evaluation seems ok."}),"\n",(0,i.jsxs)(e.li,{children:["Improved fortran code under evaluation condiction:","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Evaluation scope now has 5 parts:","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"paramter"}),"\n",(0,i.jsx)(e.li,{children:"initial value of component"}),"\n",(0,i.jsx)(e.li,{children:"volume"}),"\n",(0,i.jsx)(e.li,{children:"initial value of inflow"}),"\n",(0,i.jsx)(e.li,{children:"initial value of flow"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.li,{children:"Input module will not assign if the scope are all false, for example, if we are conducting OAT evaluation, and all paramters are False (not evaluated), then, Parameter_OAT will not appear in Input and main_Evaluation module. In this case, computer memory will be saved a little, and increase some calculation speed."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"2022-03-22",children:"2022-03-22"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Trying","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Trying inflow and flow evaluation"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"2022-02-20",children:"2022-02-20"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Changed","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Fixed result_pro.py bugs in result_file initial.","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Initial result_file will be created correctly right now."}),"\n",(0,i.jsx)(e.li,{children:"Result_file will be close correctly right now."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"2022-02-19",children:"2022-02-19"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Addded","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Making solution_pro._get_group()."}),"\n"]}),"\n"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},8453:(n,e,l)=>{l.d(e,{R:()=>t,x:()=>o});var i=l(6540);const r={},s=i.createContext(r);function t(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:t(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);