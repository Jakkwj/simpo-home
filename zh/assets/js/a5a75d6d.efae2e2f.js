"use strict";(self.webpackChunksimpo_home=self.webpackChunksimpo_home||[]).push([[7696],{5151:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var l=i(4848),s=i(8453);const r={sidebar_position:21},t="2022",o={id:"SIMPO/Earlier/2022",title:"2022",description:"2022-05-20",source:"@site/i18n/zh/docusaurus-plugin-content-docs-changelog/current/SIMPO/Earlier/2022.md",sourceDirName:"SIMPO/Earlier",slug:"/SIMPO/Earlier/2022",permalink:"/zh/changelog/SIMPO/Earlier/2022",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:21,frontMatter:{sidebar_position:21},sidebar:"docs",previous:{title:"2023",permalink:"/zh/changelog/SIMPO/Earlier/2023"},next:{title:"2021",permalink:"/zh/changelog/SIMPO/Earlier/2021"}},d={},c=[{value:"2022-05-20",id:"2022-05-20",level:2},{value:"2022-05-11",id:"2022-05-11",level:2},{value:"2022-05-02",id:"2022-05-02",level:2},{value:"2022-04-26",id:"2022-04-26",level:2},{value:"2022-04-13",id:"2022-04-13",level:2},{value:"2022-04-05",id:"2022-04-05",level:2},{value:"2022-03-22",id:"2022-03-22",level:2},{value:"2022-02-23",id:"2022-02-23",level:2},{value:"2022-02-20",id:"2022-02-20",level:2},{value:"2022-02-19",id:"2022-02-19",level:2},{value:"2022-01-23",id:"2022-01-23",level:2},{value:"2022-01-03",id:"2022-01-03",level:2}];function a(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ul:"ul",...(0,s.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.header,{children:(0,l.jsx)(e.h1,{id:"2022",children:"2022"})}),"\n",(0,l.jsx)(e.h2,{id:"2022-05-20",children:"2022-05-20"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Changed","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"DataSet empty input seems ok."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"2022-05-11",children:"2022-05-11"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Improved","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Match with web version improve."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"2022-05-02",children:"2022-05-02"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Changed","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Solution Weight input format changed."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"2022-04-26",children:"2022-04-26"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Added","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"solution._check_matrix_initial_value(), to avoid a division by zero error."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["Changed","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"DataSet.Flow can be empty."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"2022-04-13",children:"2022-04-13"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Added","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Unit and Target has been seperated in DataSet input excel file."}),"\n",(0,l.jsx)(e.li,{children:"Target has been seperated in Solution input excel file."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["Fixed","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Fixed lots of bugs and Test lots of situation, seems ok"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"2022-04-05",children:"2022-04-05"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Added","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Target in DataSet.Inflow will be converted to Component:","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Loop each Inflow, if there are targets which cannot find in component, convert them"}),"\n",(0,l.jsx)(e.li,{children:"Find the sum relation in Solution.conversion, and then find the proportional relationship in Solution.variable"}),"\n",(0,l.jsx)(e.li,{children:"Inflow will convert all the targets into components"}),"\n",(0,l.jsx)(e.li,{children:"Then, Inflow will be calculation correctly"}),"\n",(0,l.jsx)(e.li,{children:"If all the targets in Inflow are the same as components, then it won't convert."}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.li,{children:"Unit will be add in Component plotter."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"2022-03-22",children:"2022-03-22"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Added","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Trying inflow and flow evaluation"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["Trying","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"trying inflow and flow evaluation"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"2022-02-23",children:"2022-02-23"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Changed","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Logic of Grouping has changed a lot:","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"A BioModel.Matrix Group describes the sum of some Components equal to a certain value in any circumstances. A Group is actually a constraint, so Group Components cannot be simply random when conducting LHS/GA evaluation."}),"\n",(0,l.jsx)(e.li,{children:"A BioModel.Matrix Group cannot contain overlap Components and Components value must be number (not a Parameter), cause we don't support this kind of evaluation yet."}),"\n",(0,l.jsx)(e.li,{children:"Solution.Varable Group Sum of Component_Tank must be equal to DataSet.Measured Target initial value, and must be equal to corresponding Group Sum (default Group Sum) in BioModel.Matrix Group."}),"\n",(0,l.jsx)(e.li,{children:"Only a BioModel.Matrix Group will be sync with Evaluation status (solution_pro._sync_group_component_evaluation()), rather than a Group from Solution.Conversion."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"2022-02-20",children:"2022-02-20"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Changed","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Fixed result.py bugs in result_file initial","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Result_file will be close correctly right now."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"2022-02-19",children:"2022-02-19"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Changed","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Upgrading grouping comment in biomodel._get_group()."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"2022-01-23",children:"2022-01-23"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Added","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Add Component sheet in BioModel input xlsx file:","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Add Unit and Name infomation in Component sheet."}),"\n",(0,l.jsx)(e.li,{children:"Unit will be used in plot later."}),"\n",(0,l.jsx)(e.li,{children:"Component order and name must be exactly the same as in Matrix sheet"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.li,{children:"Add Typer class in Checker to wrap some common type, such as pd.DataFrame can be use as Typer.df"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["Changed","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"improve some checker"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"2022-01-03",children:"2022-01-03"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Changed","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["The motive of calculation.detection_limit (",(0,l.jsx)(e.code,{children:"1.0e-30"})," by default) has changed:","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Now calculation.detection_limit forces the biocomponent equal to it while biocomponent less than it."}),"\n",(0,l.jsxs)(e.li,{children:["For instance: if ",(0,l.jsx)(e.code,{children:"biocomponent(1) < 1.0e-30"}),", then ",(0,l.jsx)(e.code,{children:"biocomponent(1) = 1.0e-30"}),"."]}),"\n",(0,l.jsx)(e.li,{children:"By this way, it will make steady state easier (hopefully)."}),"\n",(0,l.jsx)(e.li,{children:"NOTE: this method has not been tested yet."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(a,{...n})}):a(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>t,x:()=>o});var l=i(6540);const s={},r=l.createContext(s);function t(n){const e=l.useContext(r);return l.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:t(n.components),l.createElement(r.Provider,{value:e},n.children)}}}]);